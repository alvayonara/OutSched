plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

def apiKeyPropertiesFile = rootProject.file("apikey.properties")
def apiKeyProperties = new Properties()
apiKeyProperties.load(new FileInputStream(apiKeyPropertiesFile))

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.alvayonara.outsched"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 2
        versionName "1.0.1"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "BASE_DARK_SKY_API", '"https://api.darksky.net/forecast/"'
        resValue "string", "GCP_KEY", apiKeyProperties['GCP_KEY']
        buildConfigField "String", "DARK_SKY_KEY", apiKeyProperties['DARK_SKY_KEY']
        signingConfig signingConfigs.release
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding = true
    }
}

dependencies {
    implementation "androidx.core:core-ktx:$coreKtxVersion"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "androidx.legacy:legacy-support-v4:$legacySupportVersion"

    // Testing
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$junitTestVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"

    // Google Maps
    implementation "com.google.android.gms:play-services-maps:$googleServiceMapsVersion"
    implementation "com.google.android.gms:play-services-location:$googleServiceLocationVersion"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$loggingInterceptorVersion"

    // Room
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    androidTestImplementation "androidx.room:room-testing:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"

    // Timber
    implementation "com.jakewharton.timber:timber:$timberVersion"

    // Moshi
    implementation "com.squareup.moshi:moshi-kotlin:$moshiVersion"

    // To use by viewModels
    implementation "androidx.activity:activity-ktx:$activityKtxVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentKtxVersion"

    // Karumi Dexter
    implementation "com.karumi:dexter:$karumiDexterVersion"

    // Material Dialog
    implementation "com.afollestad.material-dialogs:core:$materialDialogVersion"

    // Dagger
    implementation "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:$rxjavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroidVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "androidx.room:room-rxjava2:$roomVersion"
    implementation "com.jakewharton.rxbinding2:rxbinding:$rxbindingVersion"
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycleVersion"

    // Lottie
    implementation "com.airbnb.android:lottie:$lottieVersion"
}